[
  {
    "name": "Camera.java",
    "path": "src/com/ch/Camera.java",
    "content": {
      "structured": {
        "description": "an abstract class `Camera` that represents a camera in a 3D space. The class has various properties and methods for manipulating the camera's position, orientation, and projection matrix. The `calculateViewMatrix()` method calculates the view matrix based on the camera's rotation and translation, while the `getTranslationMatrix()` method returns a matrix that represents the camera's position in 3D space. The `adjustToViewport()` method adjusts the camera's projection matrix to fit within a specified width and height. Finally, the class defines an abstract `calculateProjectionMatrix()` method and a `CameraStruct` class for storing camera data.",
        "items": [
          {
            "id": "26b215d1-8d0f-b685-cc49-061f171019df",
            "ancestors": [],
            "description": "Is an abstract class that provides methods for calculating view and projection matrices, as well as adjusting to a specified viewport size. It also has a getTransform() method that returns the transform of the camera, and an abstract calculateProjectionMatrix() method that can be overridden by subclasses.",
            "name": "Camera",
            "location": {
              "start": 6,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 49,
            "docLength": null
          },
          {
            "id": "827e8964-44e8-d4ae-364f-3ed18ff984f3",
            "ancestors": [
              "26b215d1-8d0f-b685-cc49-061f171019df"
            ],
            "description": "Retrieves a matrix representing the view projection, which combines the camera's view transformation and projection onto the image plane. If the matrix is null or has changed since the last calculation, it calculates and returns the view projection matrix.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a `Matrix4f` object representing the view projection matrix.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera myCam = new Camera(new Matrix4f());\nmyCam.getViewProjection();\n",
              "description": ""
            },
            "name": "getViewProjection",
            "location": {
              "start": 18,
              "insert": 18,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 7,
            "docLength": null
          },
          {
            "id": "24785416-93ee-2d90-674a-91f5a031bdc8",
            "ancestors": [
              "26b215d1-8d0f-b685-cc49-061f171019df"
            ],
            "description": "Calculates a view matrix by multiplying the camera rotation and translation matrices using the projection matrix. The resulting matrix represents the transformation from world space to camera space for rendering purposes.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a 4x4 matrix representing the view transformation of a camera.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera camera = new Camera(new Matrix4f());\nTransform transform = new Transform();\ncamera.getViewProjection(); // This returns the view projection matrix of the camera.\ncamera.calculateViewMatrix(); // This calculates and sets the view projection matrix.\ncamera.getTranslationMatrix(); // This returns the translation matrix for the camera.\ntransform.setPosition(new Vector3f(1, 2, 3)); // This sets the position of the transform.\ncamera.calculateViewMatrix(); // This calculates and sets the view projection matrix again.\n",
              "description": ""
            },
            "name": "calculateViewMatrix",
            "location": {
              "start": 26,
              "insert": 26,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null
          },
          {
            "id": "512f6dec-ab1b-82ba-b541-c92e7d350324",
            "ancestors": [
              "26b215d1-8d0f-b685-cc49-061f171019df"
            ],
            "description": "Generates a matrix that represents a translation from the origin to a point in 3D space, based on the position of a camera transform.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a 4x4 transformation matrix representing the camera's position in 3D space, with the x, y, and z components of the matrix corresponding to the translation vector in the correct order.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera camera = new Camera(new Matrix4f());\nVector3f cameraPos = transform.getTransformedPos().mul(-1);\nMatrix4f translationMatrix = camera.getTranslationMatrix();\n",
              "description": "\nIn this code, a `Camera` object is created with an empty `Matrix4f`. A `Vector3f` representing the position of the camera is obtained from the `transform` object and inverted to get the camera's position. The `getTranslationMatrix()` method is then called on the `Camera` object using this vector, which returns a new `Matrix4f` that represents the translation matrix of the camera. This matrix can then be used for further calculations or operations."
            },
            "name": "getTranslationMatrix",
            "location": {
              "start": 35,
              "insert": 35,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 4,
            "docLength": null
          },
          {
            "id": "9ad780fd-3fcd-0cb3-d046-3ca82eaff7cb",
            "ancestors": [
              "26b215d1-8d0f-b685-cc49-061f171019df"
            ],
            "description": "Is an abstract class that contains an abstract method for getting a Matrix4f object and offers no other publicly accessible methods or fields.",
            "name": "CameraStruct",
            "location": {
              "start": 48,
              "insert": 48,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "class",
            "length": 5,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "Texture.java",
    "path": "src/com/ch/Texture.java",
    "content": {
      "structured": {
        "description": "A `Texture` class that loads an image as a texture and binds it to a specific OpenGL texture slot. It also provides a method to get the ID of the loaded texture. The code uses the Java GL11 package to handle the OpenGL binding and texturing operations.",
        "diagram": {
          "path": "src/com/ch/Texture.java",
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_1 {\n        label=\"opengl\"\n        color=\"#33363A\"\n        GL_RGBA8 [label=\"org.lwjgl.opengl.GL11.GL_RGBA8\", style=\"rounded,filled\"]\n        glActiveTexture [label=\"org.lwjgl.opengl.GL13.glActiveTexture\", style=\"rounded,filled\"]\n        GL_UNSIGNED_BYTE [label=\"org.lwjgl.opengl.GL11.GL_UNSIGNED_BYTE\", style=\"rounded,filled\"]\n        GL_TEXTURE_MAG_FILTER [label=\"org.lwjgl.opengl.GL11.GL_TEXTURE_MAG_FILTER\", style=\"rounded,filled\"]\n        GL_TEXTURE0 [label=\"org.lwjgl.opengl.GL13.GL_TEXTURE0\", style=\"rounded,filled\"]\n        glTexParameterf [label=\"org.lwjgl.opengl.GL11.glTexParameterf\", style=\"rounded,filled\"]\n        GL_REPEAT [label=\"org.lwjgl.opengl.GL11.GL_REPEAT\", style=\"rounded,filled\"]\n        glTexImage2D [label=\"org.lwjgl.opengl.GL11.glTexImage2D\", style=\"rounded,filled\"]\n        glBindTexture [label=\"org.lwjgl.opengl.GL11.glBindTexture\", style=\"rounded,filled\"]\n        glTexParameteri [label=\"org.lwjgl.opengl.GL11.glTexParameteri\", style=\"rounded,filled\"]\n        GL_TEXTURE_2D [label=\"org.lwjgl.opengl.GL11.GL_TEXTURE_2D\", style=\"rounded,filled\"]\n        GL_TEXTURE_WRAP_T [label=\"org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T\", style=\"rounded,filled\"]\n        GL_TEXTURE_WRAP_S [label=\"org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S\", style=\"rounded,filled\"]\n        GL_LINEAR [label=\"org.lwjgl.opengl.GL11.GL_LINEAR\", style=\"rounded,filled\"]\n        GL_RGBA [label=\"org.lwjgl.opengl.GL11.GL_RGBA\", style=\"rounded,filled\"]\n        GL_TEXTURE_MIN_FILTER [label=\"org.lwjgl.opengl.GL11.GL_TEXTURE_MIN_FILTER\", style=\"rounded,filled\"]\n    }\n    BufferedImage [label=\"java.awt.image.BufferedImage\", style=\"rounded,filled\"]\n    ImageIO [label=\"javax.imageio.ImageIO\", style=\"rounded,filled\"]\n    subgraph cluster_main {\n        // style=filled\n        color=\"#00000000\"\n        Texture [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n        label = \"\"\n    }\n    GL30 [label=\"org.lwjgl.opengl.GL30\", style=\"rounded,filled\"]\n    File [label=\"java.io.File\", style=\"rounded,filled\"]\n    GL11 [label=\"org.lwjgl.opengl.GL11\", style=\"rounded,filled\"]\n    GL14 [label=\"org.lwjgl.opengl.GL14\", style=\"rounded,filled\"]\n    ByteBuffer [label=\"java.nio.ByteBuffer\", style=\"rounded,filled\"]\n    BufferUtils [label=\"org.lwjgl.BufferUtils\", style=\"rounded,filled\"]\n    Texture -> GL_TEXTURE_MAG_FILTER [style=\"dashed\"]\n    Texture -> GL_TEXTURE_MIN_FILTER [style=\"dashed\"]\n    Texture -> glBindTexture [style=\"dashed\"]\n    Texture -> File [style=\"dashed\"]\n    Texture -> ByteBuffer [style=\"dashed\"]\n    Texture -> GL14 [style=\"dashed\"]\n    Texture -> GL_TEXTURE_WRAP_T [style=\"dashed\"]\n    Texture -> glTexParameterf [style=\"dashed\"]\n    Texture -> BufferedImage [style=\"dashed\"]\n    Texture -> GL_REPEAT [style=\"dashed\"]\n    Texture -> GL_RGBA [style=\"dashed\"]\n    Texture -> GL_TEXTURE_2D [style=\"dashed\"]\n    Texture -> glActiveTexture [style=\"dashed\"]\n    Texture -> GL30 [style=\"dashed\"]\n    Texture -> BufferUtils [style=\"dashed\"]\n    Texture -> GL_TEXTURE_WRAP_S [style=\"dashed\"]\n    Texture -> GL_RGBA8 [style=\"dashed\"]\n    Texture -> GL_UNSIGNED_BYTE [style=\"dashed\"]\n    Texture -> glTexImage2D [style=\"dashed\"]\n    Texture -> GL_TEXTURE0 [style=\"dashed\"]\n    Texture -> glTexParameteri [style=\"dashed\"]\n    Texture -> ImageIO [style=\"dashed\"]\n    Texture -> GL_LINEAR [style=\"dashed\"]\n    Texture -> GL11 [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 5286 1874\"><svg id=\"d2-svg\" class=\"d2-1396935137\" width=\"5286\" height=\"1874\" viewBox=\"11 11 5286 1874\"><rect x=\"11.000000\" y=\"11.000000\" width=\"5286.000000\" height=\"1874.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-1396935137 .text {\n\tfont-family: \"d2-1396935137-font-regular\";\n}\n@font-face {\n\tfont-family: d2-1396935137-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1396935137 .text-italic {\n\tfont-family: \"d2-1396935137-font-italic\";\n}\n@font-face {\n\tfont-family: d2-1396935137-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1396935137 .text-mono {\n\tfont-family: \"d2-1396935137-font-mono\";\n}\n@font-face {\n\tfont-family: d2-1396935137-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1396935137 .text-mono-bold {\n\tfont-family: \"d2-1396935137-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-1396935137-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-1396935137 .fill-N1{fill:#ECEDED;}\n\t\t.d2-1396935137 .fill-N2{fill:#676C7E;}\n\t\t.d2-1396935137 .fill-N3{fill:#9499AB;}\n\t\t.d2-1396935137 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-1396935137 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-1396935137 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-1396935137 .fill-N7{fill:#151719;}\n\t\t.d2-1396935137 .fill-B1{fill:#717D86;}\n\t\t.d2-1396935137 .fill-B2{fill:#717D86;}\n\t\t.d2-1396935137 .fill-B3{fill:#ffff00;}\n\t\t.d2-1396935137 .fill-B4{fill:#151719;}\n\t\t.d2-1396935137 .fill-B5{fill:#151719;}\n\t\t.d2-1396935137 .fill-B6{fill:#151719;}\n\t\t.d2-1396935137 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-1396935137 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-1396935137 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-1396935137 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-1396935137 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-1396935137 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-1396935137 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-1396935137 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-1396935137 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-1396935137 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-1396935137 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-1396935137 .stroke-N7{stroke:#151719;}\n\t\t.d2-1396935137 .stroke-B1{stroke:#717D86;}\n\t\t.d2-1396935137 .stroke-B2{stroke:#717D86;}\n\t\t.d2-1396935137 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-1396935137 .stroke-B4{stroke:#151719;}\n\t\t.d2-1396935137 .stroke-B5{stroke:#151719;}\n\t\t.d2-1396935137 .stroke-B6{stroke:#151719;}\n\t\t.d2-1396935137 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-1396935137 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-1396935137 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-1396935137 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-1396935137 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-1396935137 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-1396935137 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-1396935137 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-1396935137 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-1396935137 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-1396935137 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-1396935137 .background-color-N7{background-color:#151719;}\n\t\t.d2-1396935137 .background-color-B1{background-color:#717D86;}\n\t\t.d2-1396935137 .background-color-B2{background-color:#717D86;}\n\t\t.d2-1396935137 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-1396935137 .background-color-B4{background-color:#151719;}\n\t\t.d2-1396935137 .background-color-B5{background-color:#151719;}\n\t\t.d2-1396935137 .background-color-B6{background-color:#151719;}\n\t\t.d2-1396935137 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-1396935137 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-1396935137 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-1396935137 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-1396935137 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-1396935137 .color-N1{color:#ECEDED;}\n\t\t.d2-1396935137 .color-N2{color:#676C7E;}\n\t\t.d2-1396935137 .color-N3{color:#9499AB;}\n\t\t.d2-1396935137 .color-N4{color:#CFD2DD;}\n\t\t.d2-1396935137 .color-N5{color:#DEE1EB;}\n\t\t.d2-1396935137 .color-N6{color:#EEF1F8;}\n\t\t.d2-1396935137 .color-N7{color:#151719;}\n\t\t.d2-1396935137 .color-B1{color:#717D86;}\n\t\t.d2-1396935137 .color-B2{color:#717D86;}\n\t\t.d2-1396935137 .color-B3{color:#ffff00;}\n\t\t.d2-1396935137 .color-B4{color:#151719;}\n\t\t.d2-1396935137 .color-B5{color:#151719;}\n\t\t.d2-1396935137 .color-B6{color:#151719;}\n\t\t.d2-1396935137 .color-AA2{color:#ECEDED;}\n\t\t.d2-1396935137 .color-AA4{color:#CFD2DD;}\n\t\t.d2-1396935137 .color-AA5{color:#DEE1EB;}\n\t\t.d2-1396935137 .color-AB4{color:#CFD2DD;}\n\t\t.d2-1396935137 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"com\"><g class=\"shape\" ><rect x=\"3264.000000\" y=\"12.000000\" width=\"1160.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"3844.000000\" y=\"45.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">com</text></g><g id=\"org\"><g class=\"shape\" ><rect x=\"343.000000\" y=\"1323.000000\" width=\"4002.000000\" height=\"561.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"2344.000000\" y=\"1356.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">org</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"4365.000000\" y=\"1323.000000\" width=\"931.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"4830.500000\" y=\"1356.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"javax\"><g class=\"shape\" ><rect x=\"12.000000\" y=\"1323.000000\" width=\"311.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"167.500000\" y=\"1356.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">javax</text></g><g id=\"com.ch\"><g class=\"shape\" ><rect x=\"3314.000000\" y=\"62.000000\" width=\"1060.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"3844.000000\" y=\"91.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">ch</text></g><g id=\"org.lwjgl\"><g class=\"shape\" ><rect x=\"393.000000\" y=\"1378.000000\" width=\"3902.000000\" height=\"456.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"2344.000000\" y=\"1407.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">lwjgl</text></g><g id=\"java.awt\"><g class=\"shape\" ><rect x=\"4415.000000\" y=\"1378.000000\" width=\"369.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"4599.500000\" y=\"1407.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">awt</text></g><g id=\"java.io\"><g class=\"shape\" ><rect x=\"4804.000000\" y=\"1378.000000\" width=\"182.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"4895.000000\" y=\"1407.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">io</text></g><g id=\"java.nio\"><g class=\"shape\" ><rect x=\"5006.000000\" y=\"1378.000000\" width=\"240.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"5126.000000\" y=\"1407.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">nio</text></g><g id=\"javax.imageio\"><g class=\"shape\" ><rect x=\"62.000000\" y=\"1378.000000\" width=\"211.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"167.500000\" y=\"1407.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">imageio</text></g><g id=\"com.ch.Texture\"><g class=\"shape\" ><rect x=\"3364.000000\" y=\"112.000000\" width=\"960.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3844.000000\" y=\"150.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">Texture</text></g><g id=\"org.lwjgl.opengl\"><g class=\"shape\" ><rect x=\"443.000000\" y=\"1513.000000\" width=\"3633.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2259.500000\" y=\"1538.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">opengl</text></g><g id=\"java.awt.image\"><g class=\"shape\" ><rect x=\"4465.000000\" y=\"1433.000000\" width=\"269.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"4599.500000\" y=\"1458.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">image</text></g><g id=\"java.io.File\"><g class=\"shape\" ><rect x=\"4854.000000\" y=\"1428.000000\" width=\"82.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"4895.000000\" y=\"1466.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">File</text></g><g id=\"java.nio.ByteBuffer\"><g class=\"shape\" ><rect x=\"5056.000000\" y=\"1428.000000\" width=\"140.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"5126.000000\" y=\"1466.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ByteBuffer</text></g><g id=\"javax.imageio.ImageIO\"><g class=\"shape\" ><rect x=\"112.000000\" y=\"1428.000000\" width=\"111.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"167.500000\" y=\"1466.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ImageIO</text></g><g id=\"org.lwjgl.BufferUtils\"><g class=\"shape\" ><rect x=\"4096.000000\" y=\"1513.000000\" width=\"149.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"4170.500000\" y=\"1551.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">BufferUtils</text></g><g id=\"org.lwjgl.opengl.GL11\"><g class=\"shape\" ><rect x=\"493.000000\" y=\"1568.000000\" width=\"2848.000000\" height=\"166.000000\" rx=\"83.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1917.000000\" y=\"1589.000000\" class=\"text-mono fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL11</text></g><g id=\"org.lwjgl.opengl.GL13\"><g class=\"shape\" ><rect x=\"3361.000000\" y=\"1568.000000\" width=\"459.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3590.500000\" y=\"1589.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL13</text></g><g id=\"java.awt.image.BufferedImage\"><g class=\"shape\" ><rect x=\"4515.000000\" y=\"1483.000000\" width=\"169.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"4599.500000\" y=\"1521.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">BufferedImage</text></g><g id=\"org.lwjgl.opengl.GL14\"><g class=\"shape\" ><rect x=\"3840.000000\" y=\"1568.000000\" width=\"83.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3881.500000\" y=\"1606.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL14</text></g><g id=\"org.lwjgl.opengl.GL30\"><g class=\"shape\" ><rect x=\"3943.000000\" y=\"1568.000000\" width=\"83.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3984.500000\" y=\"1606.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL30</text></g><g id=\"org.lwjgl.opengl.GL11.GL_REPEAT\"><g class=\"shape\" ><rect x=\"543.000000\" y=\"1618.000000\" width=\"132.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"609.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_REPEAT</text></g><g id=\"org.lwjgl.opengl.GL11.GL_RGBA\"><g class=\"shape\" ><rect x=\"695.000000\" y=\"1618.000000\" width=\"113.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"751.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_RGBA</text></g><g id=\"org.lwjgl.opengl.GL11.GL_RGBA8\"><g class=\"shape\" ><rect x=\"828.000000\" y=\"1618.000000\" width=\"122.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"889.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_RGBA8</text></g><g id=\"org.lwjgl.opengl.GL11.GL_TEXTURE_2D\"><g class=\"shape\" ><rect x=\"970.000000\" y=\"1618.000000\" width=\"171.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1055.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE_2D</text></g><g id=\"org.lwjgl.opengl.GL11.GL_TEXTURE_MAG_FILTER\"><g class=\"shape\" ><rect x=\"1161.000000\" y=\"1618.000000\" width=\"247.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1284.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE_MAG_FILTER</text></g><g id=\"org.lwjgl.opengl.GL11.GL_TEXTURE_MIN_FILTER\"><g class=\"shape\" ><rect x=\"1428.000000\" y=\"1618.000000\" width=\"247.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1551.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE_MIN_FILTER</text></g><g id=\"org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S\"><g class=\"shape\" ><rect x=\"1695.000000\" y=\"1618.000000\" width=\"208.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1799.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE_WRAP_S</text></g><g id=\"org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T\"><g class=\"shape\" ><rect x=\"1923.000000\" y=\"1618.000000\" width=\"209.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2027.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE_WRAP_T</text></g><g id=\"org.lwjgl.opengl.GL11.GL_UNSIGNED_BYTE\"><g class=\"shape\" ><rect x=\"2152.000000\" y=\"1618.000000\" width=\"198.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2251.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_UNSIGNED_BYTE</text></g><g id=\"org.lwjgl.opengl.GL11.glBindTexture\"><g class=\"shape\" ><rect x=\"2370.000000\" y=\"1618.000000\" width=\"170.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2455.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">glBindTexture</text></g><g id=\"org.lwjgl.opengl.GL11.glTexImage2D\"><g class=\"shape\" ><rect x=\"2560.000000\" y=\"1618.000000\" width=\"161.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2640.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">glTexImage2D</text></g><g id=\"org.lwjgl.opengl.GL11.glTexParameterf\"><g class=\"shape\" ><rect x=\"2741.000000\" y=\"1618.000000\" width=\"190.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2836.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">glTexParameterf</text></g><g id=\"org.lwjgl.opengl.GL11.glTexParameteri\"><g class=\"shape\" ><rect x=\"2951.000000\" y=\"1618.000000\" width=\"188.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3045.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">glTexParameteri</text></g><g id=\"org.lwjgl.opengl.GL13.GL_TEXTURE0\"><g class=\"shape\" ><rect x=\"3411.000000\" y=\"1618.000000\" width=\"150.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3486.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_TEXTURE0</text></g><g id=\"org.lwjgl.opengl.GL13.glActiveTexture\"><g class=\"shape\" ><rect x=\"3581.000000\" y=\"1618.000000\" width=\"189.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3675.500000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">glActiveTexture</text></g><g id=\"org.lwjgl.opengl.GL11.GL_LINEAR\"><g class=\"shape\" ><rect x=\"3159.000000\" y=\"1618.000000\" width=\"132.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3225.000000\" y=\"1656.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GL_LINEAR</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_REPEAT)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 3440.899902 179.000000 L 3440.899902 368.000000 S 3440.899902 378.000000 3430.899902 378.000000 L 619.000000 378.000000 S 609.000000 378.000000 609.000000 388.000000 L 609.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"643.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_RGBA)[0]\"><path d=\"M 3479.300049 179.000000 L 3479.300049 418.000000 S 3479.300049 428.000000 3469.300049 428.000000 L 761.500000 428.000000 S 751.500000 428.000000 751.500000 438.000000 L 751.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"786.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_RGBA8)[0]\"><path d=\"M 3517.699951 179.000000 L 3517.699951 468.000000 S 3517.699951 478.000000 3507.699951 478.000000 L 899.000000 478.000000 S 889.000000 478.000000 889.000000 488.000000 L 889.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"923.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_TEXTURE_2D)[0]\"><path d=\"M 3556.100098 179.000000 L 3556.100098 518.000000 S 3556.100098 528.000000 3546.100098 528.000000 L 1065.500000 528.000000 S 1055.500000 528.000000 1055.500000 538.000000 L 1055.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"1090.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_TEXTURE_MAG_FILTER)[0]\"><path d=\"M 3594.500000 179.000000 L 3594.500000 568.000000 S 3594.500000 578.000000 3584.500000 578.000000 L 1294.500000 578.000000 S 1284.500000 578.000000 1284.500000 588.000000 L 1284.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"1319.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_TEXTURE_MIN_FILTER)[0]\"><path d=\"M 3632.899902 179.000000 L 3632.899902 618.000000 S 3632.899902 628.000000 3622.899902 628.000000 L 1561.500000 628.000000 S 1551.500000 628.000000 1551.500000 638.000000 L 1551.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"1586.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S)[0]\"><path d=\"M 3671.300049 179.000000 L 3671.300049 668.000000 S 3671.300049 678.000000 3661.300049 678.000000 L 1809.000000 678.000000 S 1799.000000 678.000000 1799.000000 688.000000 L 1799.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"1833.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T)[0]\"><path d=\"M 3709.699951 179.000000 L 3709.699951 718.000000 S 3709.699951 728.000000 3699.699951 728.000000 L 2037.500000 728.000000 S 2027.500000 728.000000 2027.500000 738.000000 L 2027.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"2062.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_UNSIGNED_BYTE)[0]\"><path d=\"M 3748.100098 179.000000 L 3748.100098 768.000000 S 3748.100098 778.000000 3738.100098 778.000000 L 2261.000000 778.000000 S 2251.000000 778.000000 2251.000000 788.000000 L 2251.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"2285.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.glBindTexture)[0]\"><path d=\"M 3786.500000 179.000000 L 3786.500000 818.000000 S 3786.500000 828.000000 3776.500000 828.000000 L 2465.000000 828.000000 S 2455.000000 828.000000 2455.000000 838.000000 L 2455.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"2489.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.glTexImage2D)[0]\"><path d=\"M 3863.300049 179.000000 L 3863.300049 918.000000 S 3863.300049 928.000000 3853.300049 928.000000 L 2650.500000 928.000000 S 2640.500000 928.000000 2640.500000 938.000000 L 2640.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"2675.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.glTexParameterf)[0]\"><path d=\"M 3824.899902 179.000000 L 3824.899902 868.000000 S 3824.899902 878.000000 3814.899902 878.000000 L 2846.000000 878.000000 S 2836.000000 878.000000 2836.000000 888.000000 L 2836.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"2870.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.glTexParameteri)[0]\"><path d=\"M 3901.699951 179.000000 L 3901.699951 968.000000 S 3901.699951 978.000000 3891.699951 978.000000 L 3055.000000 978.000000 S 3045.000000 978.000000 3045.000000 988.000000 L 3045.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3079.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL13.GL_TEXTURE0)[0]\"><path d=\"M 4016.899902 179.000000 L 4016.899902 1118.000000 S 4016.899902 1128.000000 4006.899902 1128.000000 L 3496.000000 1128.000000 S 3486.000000 1128.000000 3486.000000 1138.000000 L 3486.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3520.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL13.glActiveTexture)[0]\"><path d=\"M 4055.300049 179.000000 L 4055.300049 1168.000000 S 4055.300049 1178.000000 4045.300049 1178.000000 L 3685.500000 1178.000000 S 3675.500000 1178.000000 3675.500000 1188.000000 L 3675.500000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3710.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; java.awt.image.BufferedImage)[0]\"><path d=\"M 4208.899902 179.000000 L 4208.899902 418.000000 S 4208.899902 428.000000 4218.899902 428.000000 L 4589.500000 428.000000 S 4599.500000 428.000000 4599.500000 438.000000 L 4599.500000 1479.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"4634.000000\" y=\"1473.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; java.io.File)[0]\"><path d=\"M 4247.299805 179.000000 L 4247.299805 368.000000 S 4247.299805 378.000000 4257.299805 378.000000 L 4885.000000 378.000000 S 4895.000000 378.000000 4895.000000 388.000000 L 4895.000000 1424.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"4929.000000\" y=\"1418.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; java.nio.ByteBuffer)[0]\"><path d=\"M 4285.700195 179.000000 L 4285.700195 318.000000 S 4285.700195 328.000000 4295.700195 328.000000 L 5116.000000 328.000000 S 5126.000000 328.000000 5126.000000 338.000000 L 5126.000000 1424.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"5160.000000\" y=\"1418.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; javax.imageio.ImageIO)[0]\"><path d=\"M 3402.500000 179.000000 L 3402.500000 318.000000 S 3402.500000 328.000000 3392.500000 328.000000 L 177.500000 328.000000 S 167.500000 328.000000 167.500000 338.000000 L 167.500000 1424.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"202.000000\" y=\"1418.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11)[0]\"><path d=\"M 3940.100098 179.000000 L 3940.100098 1018.000000 S 3940.100098 1028.000000 3930.100098 1028.000000 L 3145.000000 1028.000000 S 3135.000000 1028.000000 3135.000000 1038.000000 L 3135.000000 1564.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3169.000000\" y=\"1558.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL14)[0]\"><path d=\"M 4093.699951 179.000000 L 4093.699951 1218.000000 S 4093.699951 1228.000000 4083.699951 1228.000000 L 3891.500000 1228.000000 S 3881.500000 1228.000000 3881.500000 1238.000000 L 3881.500000 1564.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3916.000000\" y=\"1558.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL30)[0]\"><path d=\"M 4132.100098 179.000000 L 4132.100098 1268.000000 S 4132.100098 1278.000000 4122.100098 1278.000000 L 3994.500000 1278.000000 S 3984.500000 1278.000000 3984.500000 1288.000000 L 3984.500000 1564.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"4019.000000\" y=\"1558.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.opengl.GL11.GL_LINEAR)[0]\"><path d=\"M 3978.500000 179.000000 L 3978.500000 1068.000000 S 3978.500000 1078.000000 3968.500000 1078.000000 L 3235.000000 1078.000000 S 3225.000000 1078.000000 3225.000000 1088.000000 L 3225.000000 1614.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"3259.000000\" y=\"1608.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.ch.Texture -&gt; org.lwjgl.BufferUtils)[0]\"><path d=\"M 4170.500000 179.000000 L 4170.500000 1509.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1396935137)\" /><text x=\"4205.000000\" y=\"1503.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><mask id=\"d2-1396935137\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"5286\" height=\"1874\">\n<rect x=\"11\" y=\"11\" width=\"5286\" height=\"1874\" fill=\"white\"></rect>\n<rect x=\"3819.500000\" y=\"17.000000\" width=\"49\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2325.000000\" y=\"1328.000000\" width=\"38\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4805.500000\" y=\"1328.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"135.500000\" y=\"1328.000000\" width=\"64\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3833.000000\" y=\"67.000000\" width=\"22\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2320.500000\" y=\"1383.000000\" width=\"47\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4581.000000\" y=\"1383.000000\" width=\"37\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4886.500000\" y=\"1383.000000\" width=\"17\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"5110.500000\" y=\"1383.000000\" width=\"31\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"128.000000\" y=\"1383.000000\" width=\"79\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3810.500000\" y=\"134.500000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2230.500000\" y=\"1518.000000\" width=\"58\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4573.500000\" y=\"1438.000000\" width=\"52\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4876.500000\" y=\"1450.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"5078.500000\" y=\"1450.500000\" width=\"95\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"134.500000\" y=\"1450.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4118.500000\" y=\"1535.500000\" width=\"104\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1898.000000\" y=\"1573.000000\" width=\"38\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3573.500000\" y=\"1573.000000\" width=\"34\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4537.500000\" y=\"1505.500000\" width=\"124\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3862.500000\" y=\"1590.500000\" width=\"38\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3965.500000\" y=\"1590.500000\" width=\"38\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"565.500000\" y=\"1640.500000\" width=\"87\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"717.500000\" y=\"1640.500000\" width=\"68\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"850.500000\" y=\"1640.500000\" width=\"77\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"992.500000\" y=\"1640.500000\" width=\"126\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1183.500000\" y=\"1640.500000\" width=\"202\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1450.500000\" y=\"1640.500000\" width=\"202\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1717.500000\" y=\"1640.500000\" width=\"163\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1945.500000\" y=\"1640.500000\" width=\"164\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2174.500000\" y=\"1640.500000\" width=\"153\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2392.500000\" y=\"1640.500000\" width=\"125\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2582.500000\" y=\"1640.500000\" width=\"116\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2763.500000\" y=\"1640.500000\" width=\"145\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2973.500000\" y=\"1640.500000\" width=\"143\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3433.500000\" y=\"1640.500000\" width=\"105\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3603.500000\" y=\"1640.500000\" width=\"144\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3181.500000\" y=\"1640.500000\" width=\"87\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_REPEAT: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_RGBA: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_RGBA8: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_TEXTURE_2D: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_TEXTURE_MAG_FILTER: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_TEXTURE_MIN_FILTER: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_UNSIGNED_BYTE: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.glBindTexture: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.glTexImage2D: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.glTexParameterf: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.glTexParameteri: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL13.GL_TEXTURE0: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL13.glActiveTexture: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> java.awt.image.BufferedImage: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> java.io.File: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> java.nio.ByteBuffer: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> javax.imageio.ImageIO: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL14: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL30: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.opengl.GL11.GL_LINEAR: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.ch.Texture -> org.lwjgl.BufferUtils: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\norg.lwjgl.BufferUtils: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.glTexImage2D: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njavax.imageio.ImageIO: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.nio.ByteBuffer: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL30: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL14: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_TEXTURE_MIN_FILTER: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_TEXTURE_MAG_FILTER: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL13.glActiveTexture: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_UNSIGNED_BYTE: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_LINEAR: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_RGBA: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_TEXTURE_2D: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_RGBA8: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.io.File: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.glBindTexture: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_REPEAT: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.glTexParameterf: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.awt.image.BufferedImage: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL11.glTexParameteri: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.lwjgl.opengl.GL13.GL_TEXTURE0: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.ch.Texture: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.ch.Texture: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "a762b901-7b75-53bf-9244-19b8bf164e82",
            "ancestors": [],
            "description": "Is used to handle texture mapping in graphics programming. It loads and manages textures, allowing for easy binding and manipulation. The class provides methods for loading and binding textures, as well as getting the ID of a loaded texture.",
            "name": "Texture",
            "location": {
              "start": 29,
              "insert": 29,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 75,
            "docLength": null
          },
          {
            "id": "1529a579-b4e1-1290-ed43-227925c153b1",
            "ancestors": [
              "a762b901-7b75-53bf-9244-19b8bf164e82"
            ],
            "description": "0 invokes the `bind` method on the `java.lang.Object` class, passing `0` as the argument.",
            "params": [],
            "usage": {
              "language": "java",
              "code": "public class MyClass {\n    public static void main(String[] args) {\n        Texture texture = new Texture(\"example_image.png\"); // instantiate a new Texture object with the image file name\n        texture.bind();  // binds the texture to the active texture slot (0 by default)\n    }\n}\n",
              "description": ""
            },
            "name": "bind",
            "location": {
              "start": 40,
              "insert": 40,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 3,
            "docLength": null
          },
          {
            "id": "3146e27a-acdd-35b8-ab4f-2e669d6327c7",
            "ancestors": [
              "a762b901-7b75-53bf-9244-19b8bf164e82"
            ],
            "description": "Sets the active texture slot to a specific value (0-31) and binds a texture ID to that slot using glBindTexture().",
            "params": [
              {
                "name": "samplerSlot",
                "type_name": "int",
                "description": "0-based index of the texture slot to bind a texture to within the current active texture group, with values ranging from 0 to 31.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "Texture texture = new Texture(\"image.jpg\");\n\ttexture.bind(0);\n",
              "description": ""
            },
            "name": "bind",
            "location": {
              "start": 44,
              "insert": 44,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 5,
            "docLength": null
          },
          {
            "id": "255f5731-4193-a0bf-c342-c1cc20b55b08",
            "ancestors": [
              "a762b901-7b75-53bf-9244-19b8bf164e82"
            ],
            "description": "Returns the object's `id` field value.",
            "params": [],
            "returns": {
              "type_name": "int",
              "description": "the value of the `id` field.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Texture tex = new Texture(\"textureFile\");\nint id = tex.getID();\n",
              "description": ""
            },
            "name": "getID",
            "location": {
              "start": 50,
              "insert": 50,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 3,
            "docLength": null
          },
          {
            "id": "65b97028-43ae-6e97-c446-9d80692eb5a9",
            "ancestors": [
              "a762b901-7b75-53bf-9244-19b8bf164e82"
            ],
            "description": "Loads a texture image from a file and stores it as a GL_RGBA8 texture in memory. It generates mipmaps and sets the appropriate texture parameters for linear filtering and lod bias.",
            "params": [
              {
                "name": "fileName",
                "type_name": "String",
                "description": "file path of the image to load as a texture.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "int",
              "description": "an integer identifier of a texture object created from an image file.",
              "complex_type": false
            },
            "name": "loadTexture",
            "location": {
              "start": 54,
              "insert": 54,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 48,
            "docLength": null
          }
        ]
      }
    }
  }
]